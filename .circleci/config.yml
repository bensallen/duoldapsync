version: 2
workflows:
  version: 2
  build_and_test:
    jobs:
      - clean-code
      - test:
          requires:
            - clean-code
      - race:
          requires:
            - clean-code
      - compile:
          requires:
            - clean-code

jobs:
  clean-code:
    docker:
      - image: circleci/golang:latest
    steps:
      - checkout
      - run:
          name: Go mod verify
          command: go mod verify
      - run:
          name: Go mod graph
          command: go mod graph
      - run:
          name: Run go vet
          command: go vet `find -name \*.go | grep -v ^./vendor`
      - run:
          name: Run golangci-lint
          command: |
            curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s v1.15.0
            test -z "$(~/bin/golangci-lint run)"
      - run:
          name: gofmt
          command: test -z "$(gofmt -s -l *.go)"
  test:
    docker:
      - image: circleci/golang:latest
    environment:
      - CGO_ENABLED: 0
    steps:
      - checkout
      - run:
          name: Test all
          command: go test -a -ldflags '-s' ./...
      - run:
          name: Test coverage
          command: go test -cover ./...
  race:
    docker:
      - image: circleci/golang:latest
    environment:
      - CGO_ENABLED: 1
    steps:
      - checkout
      - run:
          name: Race detector
          command: go test -race ./...
  compile:
    docker:
      - image: circleci/golang:latest
    environment:
      - CGO_ENABLED: 0
    steps:
      - checkout
      - run:
          name: build all tools
          command: |
            go build -a -ldflags '-s' ./...
